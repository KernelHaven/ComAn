2013-08-07 19:22:46 +0200
commit 0010bf60a63298700292de40e437d5927a73d49f
Author: Kyösti Mälkki <kyosti.malkki@gmail.com>
Date:   Tue Jun 11 16:32:01 2013 +0300

    usbdebug: Support AMD cimx/sb700 cimx/sb800 once again
    
    Support code for sb700 and sb800 existed already, but Kconfig and
    compile-time issues prevented from enabling USBDEBUG for boards
    with the affected AMD southbridges.
    
    Change-Id: I49e955fcc6e54927320b9dc7f62ea00c55c3cedf
    Signed-off-by: Kyösti Mälkki <kyosti.malkki@gmail.com>
    Reviewed-on: http://review.coreboot.org/3439
    Tested-by: build bot (Jenkins)
    Reviewed-by: Martin Roth <martin.roth@se-eng.com>

diff --git a/src/southbridge/amd/cimx/sb700/Kconfig b/src/southbridge/amd/cimx/sb700/Kconfig
index 97cdf1c..0a22296 100644
--- a/src/southbridge/amd/cimx/sb700/Kconfig
+++ b/src/southbridge/amd/cimx/sb700/Kconfig
@@ -1,81 +1,82 @@
 ##
 ## This file is part of the coreboot project.
 ##
 ## Copyright (C) 2012 Advanced Micro Devices, Inc.
 ##
 ## This program is free software; you can redistribute it and/or modify
 ## it under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; version 2 of the License.
 ##
 ## This program is distributed in the hope that it will be useful,
 ## but WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this program; if not, write to the Free Software
 ## Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 ##
 
 config SOUTHBRIDGE_AMD_CIMX_SB700
 	bool
 	select IOAPIC
+	select HAVE_USBDEBUG
 	select AMD_SB_CIMX
 	select HAVE_HARD_RESET
 
 if SOUTHBRIDGE_AMD_CIMX_SB700
 config SATA_CONTROLLER_MODE
 	hex
 	default 0x0
 	help
 		0x0 = Native IDE mode.
 		0x1 = RAID mode.
 		0x2 = AHCI mode.
 		0x3 = Legacy IDE mode.
 		0x4 = IDE->AHCI mode.
 		0x5 = AHCI mode as 7804 ID (AMD driver).
 		0x6 = IDE->AHCI mode as 7804 ID (AMD driver).
 
 config PCIB_ENABLE
 	bool
 	default n
 	help
 		n = Disable PCI Bridge Device 14 Function 4.
 		y = Enable PCI Bridge Device 14 Function 4.
 
 config ACPI_SCI_IRQ
 	hex
 	default 0x9
 	help
 		Set SCI IRQ to 9.
 config BOOTBLOCK_SOUTHBRIDGE_INIT
 	string
 	default "southbridge/amd/cimx/sb700/bootblock.c"
 
 config REDIRECT_SBCIMX_TRACE_TO_SERIAL
 	bool "Redirect AMD Southbridge CIMX Trace to serial console"
 	default n
 	help
 	  This Option allows you to redirect the AMD Southbridge CIMX Trace
 	  debug information to the serial console.
 
 	  Warning: Only enable this option when debuging or tracing AMD CIMX code.
 
 config S3_DATA_POS
 	hex "S3 volatile storage position"
 	default 0xFFFF0000
 	depends on HAVE_ACPI_RESUME
 	help
 	  For a system with S3 feature, the BIOS needs to save some data to
 	  non-volatile storage at cold boot stage.
 
 config S3_DATA_SIZE
 	int "S3 volatile storage size"
 	default 32768
 	depends on HAVE_ACPI_RESUME
 	help
 	  For a system with S3 feature, the BIOS needs to save some data to
 	  non-volatile storage at cold boot stage.
 
 endif #SOUTHBRIDGE_AMD_CIMX_SB700
 
diff --git a/src/southbridge/amd/cimx/sb700/Makefile.inc b/src/southbridge/amd/cimx/sb700/Makefile.inc
index 268629f..f6f0d86 100644
--- a/src/southbridge/amd/cimx/sb700/Makefile.inc
+++ b/src/southbridge/amd/cimx/sb700/Makefile.inc
@@ -1,33 +1,34 @@
 #
 # This file is part of the coreboot project.
 #
 # Copyright (C) 2012 Advanced Micro Devices, Inc.
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; version 2 of the License.
 #
 # This program is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 #
 
 
 # SB700 Platform Files
 
 romstage-y += early.c
 romstage-y += smbus.c
 romstage-y += reset.c
 
 ramstage-y += late.c
 ramstage-y += reset.c
 
 ramstage-y   += smbus.c
 ramstage-y   += lpc.c
 
-
+romstage-$(CONFIG_USBDEBUG) += ../../sb700/enable_usbdebug.c
+ramstage-$(CONFIG_USBDEBUG) += ../../sb700/enable_usbdebug.c
diff --git a/src/southbridge/amd/cimx/sb800/Kconfig b/src/southbridge/amd/cimx/sb800/Kconfig
index b82409d..92027b1 100644
--- a/src/southbridge/amd/cimx/sb800/Kconfig
+++ b/src/southbridge/amd/cimx/sb800/Kconfig
@@ -1,237 +1,238 @@
 ##
 ## This file is part of the coreboot project.
 ##
 ## Copyright (C) 2011 Advanced Micro Devices, Inc.
 ##
 ## This program is free software; you can redistribute it and/or modify
 ## it under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; version 2 of the License.
 ##
 ## This program is distributed in the hope that it will be useful,
 ## but WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this program; if not, write to the Free Software
 ## Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 ##
 
 config SOUTHBRIDGE_AMD_CIMX_SB800
 	bool
 	default n
 	select IOAPIC
+	select HAVE_USBDEBUG
 	select AMD_SB_CIMX
 	select HAVE_HARD_RESET
 
 if SOUTHBRIDGE_AMD_CIMX_SB800
 config BOOTBLOCK_SOUTHBRIDGE_INIT
         string
         default "southbridge/amd/cimx/sb800/bootblock.c"
 
 config ENABLE_IDE_COMBINED_MODE
 	bool "Enable SATA IDE combined mode"
 	default n
 	help
 	  If Combined Mode is enabled. IDE controller is exposed and
 	  SATA controller has control over Port0 through Port3,
 	  IDE controller has control over Port4 and Port5.
 
 	  If Combined Mode is disabled, IDE controller is hidden and
 	  SATA controller has full control of all 6 Ports when operating in non-IDE mode.
 
 config IDE_COMBINED_MODE
 	hex
 	default "0x0" if ENABLE_IDE_COMBINED_MODE
 	default "0x1" if !ENABLE_IDE_COMBINED_MODE
 
 choice
 	prompt "SATA Mode"
 	default SB800_SATA_AHCI
 	help
 	  Select the mode in which SATA should be driven. NATIVE AHCI, or RAID.
 	  The default is AHCI.
 
 config SB800_SATA_IDE
 	bool "NATIVE"
 	help
 	  NATIVE does not require a ROM.
 
 config SB800_SATA_AHCI
 	bool "AHCI"
 	help
 	  AHCI is the default and may work with or without AHCI ROM. It depends on the payload support.
 	  For example, seabios does not require the AHCI ROM.
 
 config SB800_SATA_RAID
 	bool "RAID"
 	help
 	  sb800 RAID mode must have the two required ROM files.
 
 endchoice
 
 config SB800_SATA_MODE
         hex
 	depends on (SB800_SATA_IDE || SB800_SATA_RAID || SB800_SATA_AHCI)
 	default "0x0" if SB800_SATA_IDE
 	default "0x1" if SB800_SATA_RAID
 	default "0x2" if SB800_SATA_AHCI
 
 config SB_SUPERIO_HWM
         bool
         default n
 
 if SB800_SATA_AHCI
 config AHCI_ROM_ID
 	string "AHCI device PCI IDs"
 	default "1002,4391"
 
 config SB800_AHCI_ROM
 	bool "Add a AHCI ROM"
 
 config AHCI_ROM_FILE
 	string "AHCI ROM path and filename"
 	depends on SB800_AHCI_ROM
 	default "site-local/sb800/ahci.bin"
 endif
 
 if SB800_SATA_RAID
 config RAID_ROM_ID
 	string "RAID device PCI IDs"
 	default "1002,4393"
         help
           1002,4392 for SATA NON-RAID5 module, 1002,4393 for SATA RAID5 mode
 
 config RAID_ROM_FILE
 	string "RAID ROM path and filename"
 	depends on SB800_SATA_RAID
 	default "site-local/sb800/raid.bin"
 
 config RAID_MISC_ROM_FILE
         string "RAID Misc ROM path and filename"
         default "site-local/sb800/misc.bin"
 	depends on SB800_SATA_RAID
 
 config RAID_MISC_ROM_POSITION
 	hex "RAID Misc ROM Position"
 	default 0xFFF00000
 	depends on SB800_SATA_RAID
 	help
 	  The RAID ROM requires that the MISC ROM is located between the range
 	  0xFFF0_0000 to 0xFFF0_FFFF. Also, it must 1K bytes aligned.
 	  The CONFIG_ROM_SIZE must larger than 0x100000.
 
 endif
 
 config S3_DATA_POS
 	hex "S3 volatile storage position"
 	default 0xFFFF0000
 	depends on HAVE_ACPI_RESUME
 	help
 	  For a system with S3 feature, the BIOS needs to save some data to
 	  non-volatile storage at cold boot stage.
 
 config S3_DATA_SIZE
 	int "S3 volatile storage size"
 	default 32768
 	depends on HAVE_ACPI_RESUME
 	help
 	  For a system with S3 feature, the BIOS needs to save some data to
 	  non-volatile storage at cold boot stage.
 
 config SB800_IMC_FWM
 	bool "Add IMC firmware"
 	default n
 	help
 	  Add SB800 / Hudson 1 IMC Firmware to support the onboard fan control.
 
 if SB800_IMC_FWM
 
 config SB800_IMC_FWM_FILE
 	string "IMC firmware path and filename"
 	default "3rdparty/southbridge/amd/sb800/imc.bin"
 
 choice
 	prompt "SB800 Firmware ROM Position"
 
 config SB800_FWM_AT_FFFA0000
 	bool "0xFFFA0000"
 	help
 	  The IMC and GEC ROMs requires a 'signature' located at one of several
 	  fixed locations in memory.  The location used shouldn't matter, just
 	  select an area that doesn't conflict with anything else.
 
 config SB800_FWM_AT_FFF20000
 	bool "0xFFF20000"
 	help
 	  The IMC and GEC ROMs requires a 'signature' located at one of several
 	  fixed locations in memory.  The location used shouldn't matter, just
 	  select an area that doesn't conflict with anything else.
 
 config SB800_FWM_AT_FFE20000
 	depends on BOARD_ROMSIZE_KB_8192 || BOARD_ROMSIZE_KB_4096 || BOARD_ROMSIZE_KB_2048
 	bool "0xFFE20000"
 	help
 	  The IMC and GEC ROMs requires a 'signature' located at one of several
 	  fixed locations in memory.  The location used shouldn't matter, just
 	  select an area that doesn't conflict with anything else.
 
 config SB800_FWM_AT_FFC20000
 	depends on BOARD_ROMSIZE_KB_8192 || BOARD_ROMSIZE_KB_4096
 	bool "0xFFC20000"
 	help
 	  The IMC and GEC ROMs requires a 'signature' located at one of several
 	  fixed locations in memory.  The location used shouldn't matter, just
 	  select an area that doesn't conflict with anything else.
 
 config SB800_FWM_AT_FF820000
 	depends on BOARD_ROMSIZE_KB_8192
 	bool "0xFF820000"
 	help
 	  The IMC and GEC ROMs requires a 'signature' located at one of several
 	  fixed locations in memory.  The location used shouldn't matter, just
 	  select an area that doesn't conflict with anything else.
 
 endchoice
 
 config SB800_FWM_POSITION
 	hex
 	default 0xFFFA0000 if SB800_FWM_AT_FFFA0000
 	default 0xFFF20000 if SB800_FWM_AT_FFF20000
 	default 0xFFE20000 if SB800_FWM_AT_FFE20000
 	default 0xFFC20000 if SB800_FWM_AT_FFC20000
 	default 0xFF820000 if SB800_FWM_AT_FF820000
 
 endif  #SB800_IMC_FWM
 
 choice
 	prompt "Fan Control"
 	default SB800_NO_FAN_CONTROL
 	help
 	  Select the method of SB800 fan control to be used.  None would be
 	  for either fixed maximum speed fans connected to the SB800 or for
 	  an external chip controlling the fan speeds.  Manual control sets
 	  up the SB800 fan control registers.  IMC fan control uses the SB800
 	  IMC to actively control the fan speeds.
 
 config SB800_NO_FAN_CONTROL
 	bool "None"
 	help
 	  No SB800 Fan control - Do not set up the SB800 fan control registers.
 
 config SB800_MANUAL_FAN_CONTROL
 	bool "Manual"
 	help
 	  Configure the SB800 fan control registers in devicetree.cb.
 
 config SB800_IMC_FAN_CONTROL
 	bool "IMC Based"
 	depends on SB800_IMC_FWM
 	help
 	  Set up the SB800 to use the IMC based Fan controller.  This requires
 	  the IMC rom from AMD.  Configure the registers in devicetree.cb.
 
 endchoice
 
 endif #SOUTHBRIDGE_AMD_CIMX_SB800
 
diff --git a/src/southbridge/amd/cimx/sb800/Makefile.inc b/src/southbridge/amd/cimx/sb800/Makefile.inc
index 831cc2e..0ff9e1e 100644
--- a/src/southbridge/amd/cimx/sb800/Makefile.inc
+++ b/src/southbridge/amd/cimx/sb800/Makefile.inc
@@ -1,102 +1,102 @@
 #
 # This file is part of the coreboot project.
 #
 # Copyright (C) 2011 Advanced Micro Devices, Inc.
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; version 2 of the License.
 #
 # This program is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 #
 
 
 # SB800 Platform Files
 
 romstage-y += cfg.c
 romstage-y += early.c
 romstage-y += smbus.c
 romstage-y += reset.c
 
 ramstage-y += cfg.c
 ramstage-y += late.c
 ramstage-y += reset.c
 
 ramstage-$(CONFIG_SB800_MANUAL_FAN_CONTROL) += fan.c
 ramstage-$(CONFIG_SB800_IMC_FAN_CONTROL) += fan.c
 ramstage-$(CONFIG_HAVE_ACPI_RESUME) += spi.c
 ramstage-$(CONFIG_GENERATE_ACPI_TABLES) += fadt.c
 
-romstage-$(CONFIG_USBDEBUG) += enable_usbdebug.c
-ramstage-$(CONFIG_USBDEBUG) += enable_usbdebug.c
+romstage-$(CONFIG_USBDEBUG) += ../../sb800/enable_usbdebug.c
+ramstage-$(CONFIG_USBDEBUG) += ../../sb800/enable_usbdebug.c
 
 ramstage-y   += smbus.c
 ramstage-y   += lpc.c
 
 ifeq ($(CONFIG_SB800_SATA_AHCI), y)
 ifdef CONFIG_SB800_AHCI_ROM
 	stripped_ahci_rom_id = $(call strip_quotes,$(CONFIG_AHCI_ROM_ID))
 	cbfs-files-y += pci$(stripped_ahci_rom_id).rom
 	pci$(stripped_ahci_rom_id).rom-file := $(call strip_quotes,$(CONFIG_AHCI_ROM_FILE))
 	pci$(stripped_ahci_rom_id).rom-type := optionrom
 endif
 endif
 
 ifeq ($(CONFIG_SB800_SATA_RAID), y)
 	stripped_raid_rom_id = $(call strip_quotes,$(CONFIG_RAID_ROM_ID))
 	cbfs-files-y += pci$(stripped_raid_rom_id).rom
 	pci$(stripped_raid_rom_id).rom-file := $(call strip_quotes,$(CONFIG_RAID_ROM_FILE))
 	pci$(stripped_raid_rom_id).rom-type := optionrom
 
 	cbfs-files-y += raid/misc.bin
 	raid/misc.bin-file := $(call strip_quotes,$(CONFIG_RAID_MISC_ROM_FILE))
 	raid/misc.bin-position := $(CONFIG_RAID_MISC_ROM_POSITION)
 	raid/misc.bin-type := raw
 endif
 
 ifeq ($(CONFIG_SB800_IMC_FWM), y)
 
 # ROMSIG At ROMBASE + 0x20000:
 # +-----------+---------------+----------------+------------+
 # |0x55AA55AA |EC ROM Address |GEC ROM Address |            |
 # +-----------+---------------+----------------+------------+
 # EC ROM should be 64K aligned.
 SB800_FWM_POSITION=$(shell printf %u $(CONFIG_SB800_FWM_POSITION))
 #assume the cbfs header is less than 128 bytes.
 ROMSIG_SIZE=16
 
 SB800_IMC_POSITION_UNALIGN=$(shell echo $(SB800_FWM_POSITION) $(ROMSIG_SIZE) \
 	128 65535 | awk '{printf("%.0f", $$1 + $$2 + $$3 + $$4)}')
 SB800_IMC_POSITION=$(shell echo $(SB800_IMC_POSITION_UNALIGN) \
 	| awk '{printf("%.0f", $$1 - $$1 % 65536)}')
 
 $(obj)/coreboot_SB800_romsig.bin: \
 			$(call strip_quotes, $(CONFIG_SB800_IMC_FWM_FILE)) \
 			$(obj)/config.h \
 			$(obj)/mainboard/$(MAINBOARDDIR)/static.c
 	echo "    SB800 FW  $@"
 	for fwm in 1437226410 \
 		$(SB800_IMC_POSITION) \
 		0 \
 		0 ; do \
 		echo  $$fwm | LC_ALL=C awk '{printf ("%c%c%c%c", $$1 % 256, int($$1/256) % 256, int($$1/65536) % 256, int($$1/16777216));}'; \
 	done > $@
 
 cbfs-files-y += SB800/fwm
 SB800/fwm-file := $(obj)/coreboot_SB800_romsig.bin
 SB800/fwm-position := $(SB800_FWM_POSITION)
 SB800/fwm-type := raw
 
 cbfs-files-y += SB800/imc
 SB800/imc-file := $(call strip_quotes, $(CONFIG_SB800_IMC_FWM_FILE))
 SB800/imc-position := $(SB800_IMC_POSITION)
 SB800/imc-type := raw
 
 endif
